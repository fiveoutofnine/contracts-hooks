/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Prices,
  PricesInterface,
} from "../../../../contracts/utils/juiceboxV1/Prices";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "currency",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract AggregatorV3Interface",
        name: "feed",
        type: "address",
      },
    ],
    name: "AddFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "_feed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
    ],
    name: "addFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedDecimalAdjuster",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedFor",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
    ],
    name: "getETHPriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108278061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101135780639fa9372314610124578063a967c20b14610137578063f2fde38b1461014a57600080fd5b80630aee17f21461008d57806336c1387e146100c05780633e495e66146100c8578063715018a614610109575b600080fd5b6100ad61009b3660046105a5565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ad601281565b6100f16100d63660046105a5565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b61011161015d565b005b6000546001600160a01b03166100f1565b6100ad6101323660046105a5565b610171565b6101116101453660046105d3565b610283565b6101116101583660046105ff565b610482565b6101656104fb565b61016f6000610555565b565b60008160000361018d576101876012600a61071d565b92915050565b6000828152600260205260409020546001600160a01b0316806101f75760405162461bcd60e51b815260206004820152601e60248201527f5072696365733a3a67657445544850726963653a204e4f545f464f554e44000060448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610748565b50505060008681526001602052604090205490925061027b915082610798565b949350505050565b61028b6104fb565b600081116102db5760405162461bcd60e51b815260206004820152601960248201527f5072696365733a3a616464466565643a2052455345525645440000000000000060448201526064016101ee565b6000818152600260205260409020546001600160a01b0316156103405760405162461bcd60e51b815260206004820152601f60248201527f5072696365733a3a616464466565643a20414c52454144595f4558495354530060448201526064016101ee565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a491906107b7565b60ff16905060128111156103fa5760405162461bcd60e51b815260206004820152601d60248201527f5072696365733a3a616464466565643a204241445f444543494d414c5300000060448201526064016101ee565b600082815260026020526040902080546001600160a01b0319166001600160a01b03851617905561042c8160126107da565b61043790600a61071d565b6000838152600160205260408082209290925590516001600160a01b0385169184917f39f7e6a3cfe66d8f71a7951583f7e721ef29d4650eddf11122c8df3aa1c772fd9190a3505050565b61048a6104fb565b6001600160a01b0381166104ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ee565b6104f881610555565b50565b6000546001600160a01b0316331461016f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105b757600080fd5b5035919050565b6001600160a01b03811681146104f857600080fd5b600080604083850312156105e657600080fd5b82356105f1816105be565b946020939093013593505050565b60006020828403121561061157600080fd5b813561061c816105be565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561067457816000190482111561065a5761065a610623565b8085161561066757918102915b93841c939080029061063e565b509250929050565b60008261068b57506001610187565b8161069857506000610187565b81600181146106ae57600281146106b8576106d4565b6001915050610187565b60ff8411156106c9576106c9610623565b50506001821b610187565b5060208310610133831016604e8410600b84101617156106f7575081810a610187565b6107018383610639565b806000190482111561071557610715610623565b029392505050565b600061061c838361067c565b805169ffffffffffffffffffff8116811461074357600080fd5b919050565b600080600080600060a0868803121561076057600080fd5b61076986610729565b945060208601519350604086015192506060860151915061078c60808701610729565b90509295509295909350565b60008160001904831182151516156107b2576107b2610623565b500290565b6000602082840312156107c957600080fd5b815160ff8116811461061c57600080fd5b6000828210156107ec576107ec610623565b50039056fea2646970667358221220a62ec7ade64cfba7719f82b2e52372b3ac177886c9c4b1bb9a49711c9bea49c764736f6c634300080d0033";

type PricesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Prices__factory extends ContractFactory {
  constructor(...args: PricesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Prices> {
    return super.deploy(overrides || {}) as Promise<Prices>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Prices {
    return super.attach(address) as Prices;
  }
  override connect(signer: Signer): Prices__factory {
    return super.connect(signer) as Prices__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricesInterface {
    return new utils.Interface(_abi) as PricesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Prices {
    return new Contract(address, _abi, signerOrProvider) as Prices;
  }
}
