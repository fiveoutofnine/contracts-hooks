/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundsModule,
  FundsModuleInterface,
} from "../../../../contracts/utils/sliceV1/FundsModule";

const _abi = [
  {
    inputs: [],
    name: "ExceedsMaxBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolPayment",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "accountBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolPayment",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISlicer[]",
        name: "slicers",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "bool",
        name: "triggerWithdraw",
        type: "bool",
      },
    ],
    name: "batchReleaseSlicers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "currencies",
        type: "address[]",
      },
    ],
    name: "batchWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "protocolPayment",
        type: "uint256",
      },
    ],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolPayment",
        type: "uint256",
      },
    ],
    name: "depositTokenFromSlicer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolPayment",
        type: "uint256",
      },
    ],
    name: "withdrawOnRelease",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611c3961004c600039600081816102dc01528181610325015281816103f60152818161043601526104c50152611c396000f3fe6080604052600436106100e15760003560e01c80638129fc1c1161007f578063b203bb9911610059578063b203bb9914610202578063ba96af3214610272578063f2fde38b14610292578063f940e385146102b257600080fd5b80638129fc1c146101a55780638da5cb5b146101ba5780639d2edfac146101e257600080fd5b806352d1902d116100bb57806352d1902d1461013557806359fc470a1461015d578063715018a61461017d57806378ed7c781461019257600080fd5b80633659cfe6146100ed57806339ed51231461010f5780634f1ef2861461012257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d6101083660046115e0565b6102d2565b005b61010d61011d3660046115fd565b6103ba565b61010d610130366004611670565b6103ec565b34801561014157600080fd5b5061014a6104b8565b6040519081526020015b60405180910390f35b34801561016957600080fd5b5061010d610178366004611718565b61056b565b34801561018957600080fd5b5061010d610623565b61010d6101a0366004611718565b610637565b3480156101b157600080fd5b5061010d6107c8565b3480156101c657600080fd5b506097546040516001600160a01b039091168152602001610154565b3480156101ee57600080fd5b5061010d6101fd3660046117a7565b6108d8565b34801561020e57600080fd5b5061025d61021d366004611879565b6001600160a01b03918216600090815260c9602090815260408083209390941682529190915220546001600160801b0380821692600160801b9092041690565b60408051928352602083019190915201610154565b34801561027e57600080fd5b5061010d61028d3660046118b2565b610ba0565b34801561029e57600080fd5b5061010d6102ad3660046115e0565b610bdc565b3480156102be57600080fd5b5061010d6102cd366004611879565b610c52565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103235760405162461bcd60e51b815260040161031a90611961565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661036c600080516020611bbd833981519152546001600160a01b031690565b6001600160a01b0316146103925760405162461bcd60e51b815260040161031a906119ad565b61039b81610c99565b604080516000808252602082019092526103b791839190610ca1565b50565b348111156103db57604051636dac6a0960e01b815260040160405180910390fd5b6103e83482846000610e0c565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104345760405162461bcd60e51b815260040161031a90611961565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661047d600080516020611bbd833981519152546001600160a01b031690565b6001600160a01b0316146104a35760405162461bcd60e51b815260040161031a906119ad565b6104ac82610c99565b6103e882826001610ca1565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105585760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161031a565b50600080516020611bbd83398151915290565b604051630bafd3f560e11b81526004810186905273e7f1725e7734ce288f8367e1bb143e90bb3f05129063175fa7ea90602401602060405180830381865afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df91906119f9565b6001600160a01b0316336001600160a01b0316146106105760405163ea8e4eb560e01b815260040160405180910390fd5b61061c82828686610e0c565b5050505050565b61062b610f8b565b6106356000610fe5565b565b604051630bafd3f560e11b81526004810186905273e7f1725e7734ce288f8367e1bb143e90bb3f05129063175fa7ea90602401602060405180830381865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906119f9565b6001600160a01b0316336001600160a01b0316146106dc5760405163ea8e4eb560e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b03167ff5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c5848460405161072a929190918252602082015260400190565b60405180910390a36001600160a01b03808516600090815260c96020908152604080832093871683529290522054819061076d906001600160801b031684611a2c565b6107779190611a44565b6001600160a01b03858116600090815260c960209081526040808320938816835292905220549092506107ba90600160801b90046001600160801b031682611a2c565b905061061c84848484611037565b600054610100900460ff16158080156107e85750600054600160ff909116105b806108025750303b158015610802575060005460ff166001145b6108655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161031a565b6000805460ff191660011790558015610888576000805461ff0019166101001790555b6108906110cd565b80156103b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60008060008060005b88518110156109a7578881815181106108fc576108fc611a5b565b602090810291909101015160405163a468801760e01b81526001600160a01b038a8116600483015289811660248301529091169063a46880179060440160408051808303816000875af1158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611a71565b9093509150821561099f576109908286611a2c565b945061099c8385611a2c565b93505b6001016108e1565b50856001600160a01b0316876001600160a01b03167ff5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c585876040516109f6929190918252602082015260400190565b60405180910390a3838303925084610b0c576001600160801b03831180610a2357506001600160801b0384115b15610a415760405163068b348d60e11b815260040160405180910390fd5b6001600160a01b03808816600090815260c960209081526040808320938a1683529290529081208054859290610a819084906001600160801b0316611a95565b82546101009290920a6001600160801b038181021990931691831602179091556001600160a01b03898116600090815260c960209081526040808320938c1683529290522080548793509091601091610ae3918591600160801b900416611a95565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610b96565b6001600160a01b03878116600090815260c960209081526040808320938a1683529290522054610b4c90600160801b90046001600160801b031685611a2c565b6001600160a01b03808916600090815260c960209081526040808320938b1683529290522054909450610b88906001600160801b031684611a2c565b9250610b9687878587611037565b5050505050505050565b60005b8151811015610bd757610bcf83838381518110610bc257610bc2611a5b565b6020026020010151610c52565b600101610ba3565b505050565b610be4610f8b565b6001600160a01b038116610c495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161031a565b6103b781610fe5565b6001600160a01b03828116600090815260c960209081526040808320938516835292905220546103e890839083906001600160801b0380821691600160801b900416611037565b6103b7610f8b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cd457610bd7836110fc565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2e575060408051601f3d908101601f19168201909252610d2b91810190611ac0565b60015b610d915760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161031a565b600080516020611bbd8339815191528114610e005760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161031a565b50610bd7838383611198565b806001600160a01b0316826001600160a01b03167ff5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c58686604051610e5a929190918252602082015260400190565b60405180910390a3610e6c8385611a44565b93506001600160801b03841180610e8957506001600160801b0383115b15610ea75760405163068b348d60e11b815260040160405180910390fd5b8315610f12576001600160a01b03808316600090815260c96020908152604080832093851683529290529081208054869290610eed9084906001600160801b0316611a95565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8215610f85576001600160a01b03828116600090815260c9602090815260408083209385168352929052208054849190601090610f60908490600160801b90046001600160801b0316611a95565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b50505050565b6097546001600160a01b031633146106355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b801561104257600019015b811561104f576001820391505b8015611060576110608484836111bd565b81156110715761107184848461131e565b826001600160a01b0316846001600160a01b03167f91fb9d98b786c57d74c099ccd2beca1739e9f6a81fb49001ca465c4b7591bbe284846040516110bf929190918252602082015260400190565b60405180910390a350505050565b600054610100900460ff166110f45760405162461bcd60e51b815260040161031a90611ad9565b61063561140d565b6001600160a01b0381163b6111695760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161031a565b600080516020611bbd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6111a18361143d565b6000825111806111ae5750805b15610bd757610f85838361147d565b6001600160a01b03808416600090815260c96020908152604080832093861680845293909152902080546001600160801b0316600160801b179055611298576040516302c8986f60e01b81526001600482018190526001600160a01b038516602483015260806044830152600060848301526064820152737a2088a1bfc9d81c55368ae168c2c02570cb814f906302c8986f90839060a40160206040518083038185885af1158015611273573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f859190611ac0565b60405163a9059cbb60e01b815273f39fd6e51aad88f6f4ce6ab8827279cfffb922666004820152602481018290526001600160a01b0383169063a9059cbb906044015b6020604051808303816000875af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190611b24565b6001600160a01b03808416600090815260c96020908152604080832093861680845293909152902080546fffffffffffffffffffffffffffffffff191660011790556113d8576000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146113b1576040519150601f19603f3d011682016040523d82523d6000602084013e6113b6565b606091505b5050905080610f855760405163af6eefa360e01b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016112db565b600054610100900460ff166114345760405162461bcd60e51b815260040161031a90611ad9565b61063533610fe5565b611446816110fc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6114e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161031a565b600080846001600160a01b0316846040516115009190611b6d565b600060405180830381855af49150503d806000811461153b576040519150601f19603f3d011682016040523d82523d6000602084013e611540565b606091505b50915091506115688282604051806060016040528060278152602001611bdd60279139611571565b95945050505050565b6060831561158057508161158a565b61158a8383611591565b9392505050565b8151156115a15781518083602001fd5b8060405162461bcd60e51b815260040161031a9190611b89565b6001600160a01b03811681146103b757600080fd5b80356115db816115bb565b919050565b6000602082840312156115f257600080fd5b813561158a816115bb565b6000806040838503121561161057600080fd5b823561161b816115bb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561166857611668611629565b604052919050565b6000806040838503121561168357600080fd5b823561168e816115bb565b915060208381013567ffffffffffffffff808211156116ac57600080fd5b818601915086601f8301126116c057600080fd5b8135818111156116d2576116d2611629565b6116e4601f8201601f1916850161163f565b915080825287848285010111156116fa57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080600060a0868803121561173057600080fd5b853594506020860135611742816115bb565b93506040860135611752816115bb565b94979396509394606081013594506080013592915050565b600067ffffffffffffffff82111561178457611784611629565b5060051b60200190565b80151581146103b757600080fd5b80356115db8161178e565b600080600080608085870312156117bd57600080fd5b843567ffffffffffffffff8111156117d457600080fd5b8501601f810187136117e557600080fd5b803560206117fa6117f58361176a565b61163f565b82815260059290921b8301810191818101908a84111561181957600080fd5b938201935b83851015611840578435611831816115bb565b8252938201939082019061181e565b975061184f90508882016115d0565b9550505050611860604086016115d0565b915061186e6060860161179c565b905092959194509250565b6000806040838503121561188c57600080fd5b8235611897816115bb565b915060208301356118a7816115bb565b809150509250929050565b600080604083850312156118c557600080fd5b82356118d0816115bb565b915060208381013567ffffffffffffffff8111156118ed57600080fd5b8401601f810186136118fe57600080fd5b803561190c6117f58261176a565b81815260059190911b8201830190838101908883111561192b57600080fd5b928401925b82841015611952578335611943816115bb565b82529284019290840190611930565b80955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611a0b57600080fd5b815161158a816115bb565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a3f57611a3f611a16565b500190565b600082821015611a5657611a56611a16565b500390565b634e487b7160e01b600052603260045260246000fd5b60008060408385031215611a8457600080fd5b505080516020909101519092909150565b60006001600160801b03808316818516808303821115611ab757611ab7611a16565b01949350505050565b600060208284031215611ad257600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611b3657600080fd5b815161158a8161178e565b60005b83811015611b5c578181015183820152602001611b44565b83811115610f855750506000910152565b60008251611b7f818460208701611b41565b9190910192915050565b6020815260008251806020840152611ba8816040850160208701611b41565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bdc13955e38cc4afc0c5a4b027cb8bd41f71245c7c7d1aa68f4b1f9a30162a9264736f6c634300080d0033";

type FundsModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundsModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundsModule__factory extends ContractFactory {
  constructor(...args: FundsModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundsModule> {
    return super.deploy(overrides || {}) as Promise<FundsModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundsModule {
    return super.attach(address) as FundsModule;
  }
  override connect(signer: Signer): FundsModule__factory {
    return super.connect(signer) as FundsModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundsModuleInterface {
    return new utils.Interface(_abi) as FundsModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundsModule {
    return new Contract(address, _abi, signerOrProvider) as FundsModule;
  }
}
