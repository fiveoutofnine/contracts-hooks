/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SLC, SLCInterface } from "../../../contracts/utils/SLC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModule_",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundsModule_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundsModule",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "productsModule",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162000fe538038062000fe583398101604081905262000035916200022b565b6040805180820182526005815264536c69636560d81b602080830191825283518085019094526003845262534c4360e81b90840152815191929160129162000081916000919062000168565b5081516200009790600190602085019062000168565b5060ff81166080524660a052620000ad620000cc565b60c0525050506001600160a01b0391821660e052166101005262000342565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200010091906200029f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001769062000263565b90600052602060002090601f0160209004810192826200019a5760008555620001e5565b82601f10620001b557805160ff1916838001178555620001e5565b82800160010185558215620001e5579182015b82811115620001e5578251825591602001919060010190620001c8565b50620001f3929150620001f7565b5090565b5b80821115620001f35760008155600101620001f8565b80516001600160a01b03811681146200022657600080fd5b919050565b600080604083850312156200023f57600080fd5b6200024a836200020e565b91506200025a602084016200020e565b90509250929050565b600181811c908216806200027857607f821691505b6020821081036200029957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002bc57607f831692505b60208084108203620002dc57634e487b7160e01b86526022600452602486fd5b818015620002f35760018114620003055762000334565b60ff1986168952848901965062000334565b60008a81526020902060005b868110156200032c5781548b82015290850190830162000311565b505084890196505b509498975050505050505050565b60805160a05160c05160e05161010051610c5062000395600039600081816101c0015261054001526000818161025a015261050c015260006104df015260006104aa0152600061016a0152610c506000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636740ff4011610097578063a9059cbb11610066578063a9059cbb14610242578063b5441fe814610255578063d505accf1461027c578063dd62ed3e1461028f57600080fd5b80636740ff40146101bb57806370a08231146101fa5780637ecebe001461021a57806395d89b411461023a57600080fd5b806323b872dd116100d357806323b872dd14610152578063313ce567146101655780633644e5151461019e57806340c10f19146101a657600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b6101026102ba565b60405161010f9190610961565b60405180910390f35b61012b6101263660046109d2565b610348565b604051901515815260200161010f565b61014460025481565b60405190815260200161010f565b61012b6101603660046109fc565b6103b4565b61018c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161010f565b6101446104a6565b6101b96101b43660046109d2565b610501565b005b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b610144610208366004610a38565b60036020526000908152604090205481565b610144610228366004610a38565b60056020526000908152604090205481565b61010261058e565b61012b6102503660046109d2565b61059b565b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6101b961028a366004610a5a565b610613565b61014461029d366004610acd565b600460209081526000928352604080842090915290825290205481565b600080546102c790610b00565b80601f01602080910402602001604051908101604052809291908181526020018280546102f390610b00565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a39086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610410576103eb8382610b50565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610438908490610b50565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104939087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104dc576104d761085c565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906105635750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b15610580576040516282b42960e81b815260040160405180910390fd5b61058a82826108f6565b5050565b600180546102c790610b00565b336000908152600360205260408120805483919083906105bc908490610b50565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a39086815260200190565b428410156106685760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106746104a6565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610780573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107b65750876001600160a01b0316816001600160a01b0316145b6107f35760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b604482015260640161065f565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161088e9190610b67565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109089190610c02565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561098e57858101830151858201604001528201610972565b818111156109a0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109cd57600080fd5b919050565b600080604083850312156109e557600080fd5b6109ee836109b6565b946020939093013593505050565b600080600060608486031215610a1157600080fd5b610a1a846109b6565b9250610a28602085016109b6565b9150604084013590509250925092565b600060208284031215610a4a57600080fd5b610a53826109b6565b9392505050565b600080600080600080600060e0888a031215610a7557600080fd5b610a7e886109b6565b9650610a8c602089016109b6565b95506040880135945060608801359350608088013560ff81168114610ab057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ae057600080fd5b610ae9836109b6565b9150610af7602084016109b6565b90509250929050565b600181811c90821680610b1457607f821691505b602082108103610b3457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b6257610b62610b3a565b500390565b600080835481600182811c915080831680610b8357607f831692505b60208084108203610ba257634e487b7160e01b86526022600452602486fd5b818015610bb65760018114610bc757610bf4565b60ff19861689528489019650610bf4565b60008a81526020902060005b86811015610bec5781548b820152908501908301610bd3565b505084890196505b509498975050505050505050565b60008219821115610c1557610c15610b3a565b50019056fea2646970667358221220b59e7a40b7da166037a88a969f5aabc346a51e0430e402425e2e21033dd1eb3164736f6c634300080d0033";

type SLCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SLCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SLC__factory extends ContractFactory {
  constructor(...args: SLCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    productsModule_: PromiseOrValue<string>,
    fundsModule_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SLC> {
    return super.deploy(
      productsModule_,
      fundsModule_,
      overrides || {}
    ) as Promise<SLC>;
  }
  override getDeployTransaction(
    productsModule_: PromiseOrValue<string>,
    fundsModule_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      productsModule_,
      fundsModule_,
      overrides || {}
    );
  }
  override attach(address: string): SLC {
    return super.attach(address) as SLC;
  }
  override connect(signer: Signer): SLC__factory {
    return super.connect(signer) as SLC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SLCInterface {
    return new utils.Interface(_abi) as SLCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SLC {
    return new Contract(address, _abi, signerOrProvider) as SLC;
  }
}
