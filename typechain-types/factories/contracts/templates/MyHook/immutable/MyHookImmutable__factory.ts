/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MyHookImmutable,
  MyHookImmutableInterface,
} from "../../../../../contracts/templates/MyHook/immutable/MyHookImmutable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102f93803806102f983398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b610258806100a16000396000f3fe6080604052600436106100295760003560e01c806395db93681461002e578063a23fffb914610069575b600080fd5b34801561003a57600080fd5b50610055610049366004610184565b50600195945050505050565b604051901515815260200160405180910390f35b61007c610077366004610184565b61007e565b005b8561008881610091565b50505050505050565b80600154146100b357604051632eafdb6960e01b815260040160405180910390fd5b6000546001600160a01b031633146100de576040516347322d0360e01b815260040160405180910390fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261010857600080fd5b813567ffffffffffffffff80821115610123576101236100e1565b604051601f8301601f19908116603f0116810190828211818310171561014b5761014b6100e1565b8160405283815286602085880101111561016457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561019d57600080fd5b863595506020870135945060408701356001600160a01b03811681146101c257600080fd5b935060608701359250608087013567ffffffffffffffff808211156101e657600080fd5b6101f28a838b016100f7565b935060a089013591508082111561020857600080fd5b5061021589828a016100f7565b915050929550929550929556fea2646970667358221220a1774aab960b685d5cf3947a0bf91b3bdf7249dfe04095b7ce183b02dc1145df64736f6c634300080d0033";

type MyHookImmutableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyHookImmutableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyHookImmutable__factory extends ContractFactory {
  constructor(...args: MyHookImmutableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    productsModuleAddress_: PromiseOrValue<string>,
    slicerId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyHookImmutable> {
    return super.deploy(
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    ) as Promise<MyHookImmutable>;
  }
  override getDeployTransaction(
    productsModuleAddress_: PromiseOrValue<string>,
    slicerId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    );
  }
  override attach(address: string): MyHookImmutable {
    return super.attach(address) as MyHookImmutable;
  }
  override connect(signer: Signer): MyHookImmutable__factory {
    return super.connect(signer) as MyHookImmutable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyHookImmutableInterface {
    return new utils.Interface(_abi) as MyHookImmutableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyHookImmutable {
    return new Contract(address, _abi, signerOrProvider) as MyHookImmutable;
  }
}
