/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721GatedClone,
  ERC721GatedCloneInterface,
} from "../../../../../contracts/hooks/ERC721Gated/clones/ERC721GatedClone";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "erc721_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100eb565b600254600160a81b900460ff161561008c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60025460ff600160a01b909104811610156100e9576002805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6104eb806100fa6000396000f3fe6080604052600436106100345760003560e01c806395db936814610039578063a23fffb91461006d578063c350a1b514610082575b600080fd5b34801561004557600080fd5b506100596100543660046103c8565b6100a2565b604051901515815260200160405180910390f35b61008061007b3660046103c8565b610122565b005b34801561008e57600080fd5b5061008061009d36600461045a565b610160565b6002546040516370a0823160e01b81526001600160a01b03868116600483015260009283929116906370a0823190602401602060405180830381865afa1580156100f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610114919061049c565b151598975050505050505050565b8561012c816102c0565b61013a8787878787876100a2565b61015757604051631eb49d6d60e11b815260040160405180910390fd5b50505050505050565b600254600160a81b900460ff161580801561018857506002546001600160a01b90910460ff16105b806101a95750303b1580156101a95750600254600160a01b900460ff166001145b6102105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6002805460ff60a01b1916600160a01b179055801561023d576002805460ff60a81b1916600160a81b1790555b600080546001600160a01b038087166001600160a01b0319928316179092556001859055600280549285169290911691909117905580156102ba576002805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b80600154146102e257604051632eafdb6960e01b815260040160405180910390fd5b6000546001600160a01b0316331461030d576040516347322d0360e01b815260040160405180910390fd5b50565b6001600160a01b038116811461030d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261034c57600080fd5b813567ffffffffffffffff8082111561036757610367610325565b604051601f8301601f19908116603f0116810190828211818310171561038f5761038f610325565b816040528381528660208588010111156103a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c087890312156103e157600080fd5b863595506020870135945060408701356103fa81610310565b935060608701359250608087013567ffffffffffffffff8082111561041e57600080fd5b61042a8a838b0161033b565b935060a089013591508082111561044057600080fd5b5061044d89828a0161033b565b9150509295509295509295565b60008060006060848603121561046f57600080fd5b833561047a81610310565b925060208401359150604084013561049181610310565b809150509250925092565b6000602082840312156104ae57600080fd5b505191905056fea2646970667358221220347ff1a0d91828a7bdddd3dcb3abb1562fe3f4f79d0a078f8f9735d871568db164736f6c634300080d0033";

type ERC721GatedCloneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721GatedCloneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721GatedClone__factory extends ContractFactory {
  constructor(...args: ERC721GatedCloneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721GatedClone> {
    return super.deploy(overrides || {}) as Promise<ERC721GatedClone>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721GatedClone {
    return super.attach(address) as ERC721GatedClone;
  }
  override connect(signer: Signer): ERC721GatedClone__factory {
    return super.connect(signer) as ERC721GatedClone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721GatedCloneInterface {
    return new utils.Interface(_abi) as ERC721GatedCloneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721GatedClone {
    return new Contract(address, _abi, signerOrProvider) as ERC721GatedClone;
  }
}
