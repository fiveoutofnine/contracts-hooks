/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AllowlistedClone,
  AllowlistedCloneInterface,
} from "../../../../../contracts/hooks/Allowlisted/clones/AllowlistedClone";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600354610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60035460ff90811610156100dc576003805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610617806100ed6000396000f3fe6080604052600436106100345760003560e01c80631b7ce0411461003957806395db93681461005b578063a23fffb91461008f575b600080fd5b34801561004557600080fd5b50610059610054366004610384565b6100a2565b005b34801561006757600080fd5b5061007b61007636600461046e565b6101d7565b604051901515815260200160405180910390f35b61005961009d36600461046e565b610245565b600354610100900460ff16158080156100c25750600354600160ff909116105b806100dc5750303b1580156100dc575060035460ff166001145b6101435760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6003805460ff191660011790558015610166576003805461ff0019166101001790555b600080546001600160a01b0319166001600160a01b0386161790556001839055600282905580156101d1576003805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080828060200190518101906101ee91906104fe565b6040516bffffffffffffffffffffffff19606089901b1660208201529091506000906034016040516020818303038152906040528051906020012090506102388260025483610283565b9998505050505050505050565b8561024f81610299565b61025d8787878787876101d7565b61027a57604051631eb49d6d60e11b815260040160405180910390fd5b50505050505050565b60008261029085846102e9565b14949350505050565b80600154146102bb57604051632eafdb6960e01b815260040160405180910390fd5b6000546001600160a01b031633146102e6576040516347322d0360e01b815260040160405180910390fd5b50565b600081815b845181101561032e5761031a8286838151811061030d5761030d6105a4565b6020026020010151610336565b915080610326816105ba565b9150506102ee565b509392505050565b6000818310610352576000828152602084905260409020610361565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461037f57600080fd5b919050565b60008060006060848603121561039957600080fd5b6103a284610368565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103f6576103f66103b7565b604052919050565b600082601f83011261040f57600080fd5b813567ffffffffffffffff811115610429576104296103b7565b61043c601f8201601f19166020016103cd565b81815284602083860101111561045157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c0878903121561048757600080fd5b863595506020870135945061049e60408801610368565b935060608701359250608087013567ffffffffffffffff808211156104c257600080fd5b6104ce8a838b016103fe565b935060a08901359150808211156104e457600080fd5b506104f189828a016103fe565b9150509295509295509295565b6000602080838503121561051157600080fd5b825167ffffffffffffffff8082111561052957600080fd5b818501915085601f83011261053d57600080fd5b81518181111561054f5761054f6103b7565b8060051b91506105608483016103cd565b818152918301840191848101908884111561057a57600080fd5b938501935b838510156105985784518252938501939085019061057f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016105da57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205e0666ab8a715a5c3e0047ecde398ccab05ab4728f18ff0a148a860c2ed5de3b64736f6c634300080d0033";

type AllowlistedCloneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowlistedCloneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllowlistedClone__factory extends ContractFactory {
  constructor(...args: AllowlistedCloneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllowlistedClone> {
    return super.deploy(overrides || {}) as Promise<AllowlistedClone>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AllowlistedClone {
    return super.attach(address) as AllowlistedClone;
  }
  override connect(signer: Signer): AllowlistedClone__factory {
    return super.connect(signer) as AllowlistedClone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowlistedCloneInterface {
    return new utils.Interface(_abi) as AllowlistedCloneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllowlistedClone {
    return new Contract(address, _abi, signerOrProvider) as AllowlistedClone;
  }
}
