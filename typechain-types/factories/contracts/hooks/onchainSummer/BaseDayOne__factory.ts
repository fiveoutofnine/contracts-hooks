/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BaseDayOne,
  BaseDayOneInterface,
} from "../../../../contracts/hooks/onchainSummer/BaseDayOne";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104c13803806104c183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61042e806100936000396000f3fe6080604052600436106100295760003560e01c806395db93681461002e578063a23fffb914610062575b600080fd5b34801561003a57600080fd5b5061004e610049366004610285565b610077565b604051901515815260200160405180910390f35b610075610070366004610285565b61012a565b005b6000806000737d5861cfe1c74aaa0999b7e2651bf2ebd2a62d896001600160a01b0316631d2c0b386040518163ffffffff1660e01b815260040160e060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f29190610340565b505050935093505050428267ffffffffffffffff1610801561011d5750428167ffffffffffffffff16115b9998505050505050505050565b604051634536818160e01b81526001600160a01b038516600482015260248101849052608060448201526000608482015273c64563b8a9776c47e68ed9891a60cc81fb7c3f646064820152737d5861cfe1c74aaa0999b7e2651bf2ebd2a62d8990634536818190349060a40160206040518083038185885af11580156101b4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101d991906103df565b50505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261020957600080fd5b813567ffffffffffffffff80821115610224576102246101e2565b604051601f8301601f19908116603f0116810190828211818310171561024c5761024c6101e2565b8160405283815286602085880101111561026557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561029e57600080fd5b863595506020870135945060408701356001600160a01b03811681146102c357600080fd5b935060608701359250608087013567ffffffffffffffff808211156102e757600080fd5b6102f38a838b016101f8565b935060a089013591508082111561030957600080fd5b5061031689828a016101f8565b9150509295509295509295565b805167ffffffffffffffff8116811461033b57600080fd5b919050565b600080600080600080600060e0888a03121561035b57600080fd5b87516cffffffffffffffffffffffffff8116811461037857600080fd5b602089015190975063ffffffff8116811461039257600080fd5b95506103a060408901610323565b94506103ae60608901610323565b93506103bc60808901610323565b92506103ca60a08901610323565b915060c0880151905092959891949750929550565b6000602082840312156103f157600080fd5b505191905056fea2646970667358221220496ac754fca2f01255565f909f01ec5235a32741cf47cacfa0583ed7c9ab404b64736f6c634300080d0033";

type BaseDayOneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseDayOneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseDayOne__factory extends ContractFactory {
  constructor(...args: BaseDayOneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    productsModuleAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseDayOne> {
    return super.deploy(
      productsModuleAddress_,
      overrides || {}
    ) as Promise<BaseDayOne>;
  }
  override getDeployTransaction(
    productsModuleAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(productsModuleAddress_, overrides || {});
  }
  override attach(address: string): BaseDayOne {
    return super.attach(address) as BaseDayOne;
  }
  override connect(signer: Signer): BaseDayOne__factory {
    return super.connect(signer) as BaseDayOne__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseDayOneInterface {
    return new utils.Interface(_abi) as BaseDayOneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseDayOne {
    return new Contract(address, _abi, signerOrProvider) as BaseDayOne;
  }
}
